name: CI

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"

jobs:
  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Display build environment
        run: printenv

      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: 1.19

      - uses: actions/checkout@v3
        name: Checkout go-polls

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: >
            --enable=errcheck,gocritic,gofmt,goimports,gosec,gosimple,govet,ineffassign,revive,staticcheck,typecheck,unused,bodyclose
            --fix=false
            --max-same-issues=20
            --out-${NO_FUTURE}format=colored-line-number
            --print-issued-lines=true
            --print-linter-name=true
            --sort-results=true
            --timeout=5m0s
            --uniq-by-line=false

          only-new-issues: false
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build
        run: make build

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test
        run: make cover

      - name: Coverage
        uses: actions/upload-artifact@v2
        with:
          name: cover
          path: ./cover.html

#  openapi:
#    name: OpenAPI
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/setup-go@v4
#        name: Set up Go 1.x
#        with:
#          go-version: 1.18
#
#      - uses: actions/checkout@v3
#        name: Checkout edge-api
#
#      - name: Generate API docs spec file
#        run: go run cmd/spec/main.go
#
#      - name: Set up python3
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Install openapi-spec-validator
#        run: pip install openapi-spec-validator==0.5.2
#
#      - name: Validate spec-file
#        run: python3 -m openapi_spec_validator ${{ github.workspace }}/cmd/spec/openapi.json